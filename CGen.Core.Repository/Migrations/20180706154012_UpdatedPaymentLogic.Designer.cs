// <auto-generated />
using CGen.Core.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CGen.Core.Repository.Migrations
{
    [DbContext(typeof(CGenContext))]
    [Migration("20180706154012_UpdatedPaymentLogic")]
    partial class UpdatedPaymentLogic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientEmail")
                        .IsRequired();

                    b.Property<DateTimeOffset>("LastLoginDate");

                    b.Property<string>("UniqueCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClientId");

                    b.Property<Guid?>("CreatedById");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<string>("InvoiceNumber");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid?>("ClientId");

                    b.Property<DateTimeOffset>("DatePaid");

                    b.Property<Guid?>("InvoiceId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<DateTimeOffset?>("LastLoggedInDate");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Salt");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("RoleId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.Invoice", b =>
                {
                    b.HasOne("CGen.Core.Domain.DomainObjects.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId");

                    b.HasOne("CGen.Core.Domain.DomainObjects.User", "CreatedBy")
                        .WithMany("Invoices")
                        .HasForeignKey("CreatedById");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.Payment", b =>
                {
                    b.HasOne("CGen.Core.Domain.DomainObjects.Client", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("ClientId");

                    b.HasOne("CGen.Core.Domain.DomainObjects.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("CGen.Core.Domain.DomainObjects.UserRole", b =>
                {
                    b.HasOne("CGen.Core.Domain.DomainObjects.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("CGen.Core.Domain.DomainObjects.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
